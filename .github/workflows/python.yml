# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Auto CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-js:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./app/yarn.lock
      - name: Try Compiling
        working-directory: ./
        run: |
          chmod u+x ./scripts/compile.sh
          ./scripts/compile.sh
      - name: Uploading dist
        uses: actions/upload-artifact@v3
        with:
          name: pygwalker-app
          path: ./pygwalker/templates/dist/*
  
  build-py:
    needs: build-js
    
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install streamlit selenium pandas webdriver-manager
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install chorme
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install ./google-chrome-stable_current_amd64.deb
      - name: run the streamlit
        working-directory: ./
        run: |
          nohup streamlit run ./tests/test_streamlit.py &
      - name: Test and get the html
        working-directory: ./
        run: |
          python ./tests/selenium-test.py http://127.0.0.1:8501 ./tests/streamlit.html          